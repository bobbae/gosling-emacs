(progn 
; This code was written at CMU, on or about Sun Jan 25 07:41:13 1981
; by Doug Philips...
; This file attempts to define a reasonable incremental search-facility
; somewhat similar to the incremental search found in MIT Emacs...
; mode string hacks added Mon Mar  1 23:42:39 1982 by Chris Kent at Purdue,
; to get around the fact that messages get cleared when load is updated.
(declare-global save-mode-string)
(defun 
    (inc-forward-work-fun next ok nextc
	(setq ok 1)
	(while (= ok 1)
	    (setq next "")			      ; start with nothing
	    (while (= next "")			      ; loop till we get a
		; non-nil character
		(message (concat "Incremental-FSearch:" string))
		(setq mode-string (concat save-mode-string "-FSearch"))
		(setq next (char-to-string (setq nextc
					       (get-tty-character))))
	    )
	    (if (| (= nextc 27) (= nextc 13))	      ; wants to stay here
		(progn (setq go-to (dot))	      ; save place
		    (setq ok -1)
		    (if (!= string "") (setq search-string string))
		)
		(= nextc 7)			      ; Bell
		(error-message "Aborted.")
		(= nextc 19)			      ; Control-S
		(if (& (= string "") (= search-string ""))
		    (progn
			(message "Nothing to search for")
			(sit-for 2)
		    )
		    (progn
			(if (= string "") (setq string search-string))
			(save-excursion
			    (if (! (error-occured
				       (search-forward string)))
				(progn
				    (setq ok (inc-forward-work-fun))
				    (if (= ok 0) (setq ok 1))
				)
				(progn (message "Not Found.") (sit-for 2))
			    )
			)
		    )
		)
		(= nextc 18)			      ; Control-R
		(save-excursion
		    (if (!= string "")
			(search-reverse string)
		    )
		    (setq ok (inc-reverse-work-fun))
		    (if (= ok 0) (setq ok 1))
		)
		(| (= nextc 8) (= nextc 127))	      ; backspace or delete
		(setq ok 0)
		(| (& (< nextc 17) (!= nextc 9))
		    (& (> nextc 17) (< nextc ' '))
		)
		(progn
		    (setq ok -1)
		    (setq go-to (dot))
		    (if (!= string "") (setq search-string string))
		    (push-back-character nextc)
		)
		(save-excursion
		    (if (= nextc 17)		      ; Control-Q
			(progn
			    (message (concat "Incremental-QSearch:" string))
			    (setq mode-string (concat save-mode-string "QSearch"))
			    (setq next (char-to-string
					   (setq nextc (get-tty-character)))))
		    )
		    (if (c= (following-char) nextc)
			(progn (forward-character)
			    (inc-forward-recurse)
			)
			(error-occured (search-forward (concat string next)))
			(progn (message "can't-find it..")
			    (sit-for 2)
			)
			(inc-forward-recurse)
		    )
		)
	    )
	)
	ok
    )
    (inc-forward-top-level string go-to len
	(setq save-mode-string mode-string)
	(setq go-to (dot))
	(setq string "")
	(setq len 0)
	(inc-forward-work-fun)
	(if (!= go-to (dot))
	    (progn
		(goto-character go-to)
		(if search-auto-top-of-window
		    (line-to-top-of-window))))
	(setq mode-string save-mode-string)
    )
    (inc-forward-recurse
	(setq string (concat string next))
	(setq len (+ 1 len))
	(setq ok (inc-forward-work-fun))
	(if (= ok 0)
	    (progn (setq len (- len 1))
		(if (< len 1)
		    (progn (setq string "")
			(setq len 0)
		    )
		    (setq string (substr string 1 len))
		)
		(setq ok "1")
	    )
	)
    )
    (inc-reverse-work-fun next ok nextc
	(setq ok 1)
	(while (= ok 1)
	    (setq next "")
	    (while (= next "")
		(message (concat "Incremental-RSearch:" string))
		(setq mode-string (concat save-mode-string "-RSearch"))
		(setq next (char-to-string (setq nextc
					       (get-tty-character))))
	    )
	    (if (| (= nextc '') (= nextc '')
		    (= nextc '') (= nextc ''))
		(progn (if (= nextc '')
			   (progn (setq go-to (dot))
			       (setq ok "-1")
			   )
		       )
		    (if (= nextc '') (setq ok "-1"))
		    (if (= nextc '')
			(save-excursion
			    (if (!= "" string)
				(search-forward string)
			    )
			    (setq ok (inc-forward-work-fun))
			)
		    )
		    (if (= nextc '')
			(if (error-occured (search-reverse string))
			    (progn (message "Not Found")
				(sit-for 2)
			    )
			)
		    )
		)
		(if (= nextc '')
		    (setq ok 0)		 ; then
		    (save-excursion		 ; else
			(if (!= string "")
			    (search-forward string))
			(if (c= nextc (following-char))
			    (progn
				(if (!= string "")
				    (search-reverse string))
				(inc-reverse-recurse))
			    (error-occured
				(search-reverse (concat string next)))
			    (progn (message "can't find it..")
				(sit-for 2))
			    (inc-reverse-recurse))
		    )			 ; end of save-excursion
		)				 ; if ...
	    )
	)
	ok
    )
    (inc-reverse-top-level string len go-to
	(setq save-mode-string mode-string)
	(setq go-to (dot))
	(setq string "")
	(setq len 0)
	(inc-reverse-work-fun)
	(if (!= go-to (dot))
	    (progn
		(goto-character go-to)
		(if search-auto-top-of-window
		    (line-to-top-of-window))))
	(setq mode-string save-mode-string)
    )
    (inc-reverse-recurse
	(setq string (concat string next))
	(setq len (+ 1 len))
	(setq ok (inc-reverse-work-fun))
	(if (= ok 0)
	    (progn (setq len (- len 1))
		(if (< len 1)
		    (progn (setq string "")
			(setq len 0)
		    )
		    (setq string (substr string 1 len))
		)
		(setq ok "1")
	    )
	)
    )
)
(declare-global search-string search-auto-top-of-window)
(if (= search-auto-top-of-window "") (setq search-auto-top-of-window 0))
(bind-to-key "inc-forward-top-level" '')
(bind-to-key "inc-reverse-top-level" '')
)
