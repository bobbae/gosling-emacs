head     1.3;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.3
date     88.07.08.20.37.52;  author reid;  state Exp;
branches ;
next     1.2;

1.2
date     88.07.08.20.33.15;  author reid;  state Exp;
branches ;
next     1.1;

1.1
date     88.07.08.20.30.46;  author reid;  state Exp;
branches ;
next     ;


desc
@@


1.3
log
@added explanation that this is Gosling emacs.
@
text
@This is Gosling Emacs, version 84S, locally modified at decwrl.

THE OFFICIAL SOURCES FOR EMACS ARE KEPT ON acetes:/usr/src/local/emacs under
RCS control. If you modify the sources on acetes, you are are NOT done until
you update mopar, generate a new version of emacs and test it on a Titan!
The Makefile for the Titan version is kept on circe. See below.

***********

The Titan and Vax versions of emacs have been merged as of 6 May 1986. If you
wish to construct a new version of the Titan emacs, you must generate the
program on mopar:/tunix/src/local/emacs.  The Makefile on the *tunix*
subdirectory is different; the rest consists of symbolic links to
mopar:/usr/src/local/emacs. YOU MUST MANUALLY UPDATE
mopar:/usr/src/local/emacs from acetes after making changes. Eg., "rdist -c
*.c mopar:/usr/src/local/emacs".

The Vax version of emacs uses the ibis libraries.

The InsertLines and DeleteLines (note PLURAL) code has been ifdef'd
OUT of the TrmVS100.c driver because it did not work on the Vax or the Titan.

Some comments about the Titan version:
  1) unexec does not work -- the Titan version of unix is different
  and I have not fixed unexec.

  2) There are numerous problems I fixed in emacs for the Titan. If
  you decide to add features to emacs here are a few things that
  might bite you when you try to get it to run on the Titan:

    a) Malloc returns a byte pointer and you must coerce its
    results into a word pointer as required:
        p = (struct foo *) malloc(sizeof(foo));

    b) Realloc's parameter must be coerced back into a byte pointer
    as required:
        p = (struct foo *) realloc( (char *)p, sizeof(foo)*2);

    c) Polymorphic routines (initialization routines especially)
    cause problems if you coerce pointer types to match the
    parameter declaration. Consider macros.DefMac:
        DefMac (s, bodyparm, IsMlisp)
	char *s, *bodyparm;
    Now in emacs.c there is initialization code that calls DefMac
    with bodyparm=word pointer. For example:
        DefMac ("ESC-prefix", &ESCmap, -2);
    Your natural thought mmight be to write
        DefMac ("ESC-prefix", (char *)&ESCmap, -2);
    unfortunately this is a bug. The third parameter declares the
    type of the bodyparm. By coercing &ESCmap into a char * you'll
    cause the wrong value to be stored into body.b_bound.b_keymap.
    Don't use type casts here!

    d) Cast the data for ioctl's into word pointers:
        ioctl(fd, ioctl, (waddr_t)&tlbytes );

  3) Hey, hey, let's be careful out there.

Gene McDaniel
6 May 86

**********
EMACS sources are kept on ACETES. DO NOT MODIFY ANY source files without
checking them out from acetes -- the emacs sources are kept under
RCS control
Gene McDaniel
16 Apr 86
@


1.2
log
@changed circe references to mopar
@
text
@d1 2
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
you update circe, generate a new versio of emacs and test it on a Titan!
d7 8
a14 6
The Titan and Vax versions of emacs have been merged as of 6 May 1986.
If you wish to construct a new version of the Titan emacs, you must
generate the program on circe:/tunix/src/local/emacs.  The Makefile
on the *tunix* subdirectory is different; the rest consists of symbolic links to
circe:/usr/src/local/emacs. YOU MUST MANUALLY UPDATE circe:/usr/src/local/emacs
from acetes after making changes. Eg., "rdist -c *.c circe:/usr/src/local/emacs".
@
